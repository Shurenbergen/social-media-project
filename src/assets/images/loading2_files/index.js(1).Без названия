(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
// Generated by LiveScript 1.3.0
(function(){
  var ret;
  ret = {
    id: 'bean-eater',
    type: 'spinner',
    name: "Bean Eater",
    desc: "from classic video game 'pacman'. there are even beans!",
    tags: ['pacman', 'bean', 'game', 'video', 'pie', 'eat', 'mouth'],
    slug: "eat-bean-pie-loading-gif",
    license: 'free',
    edit: {
      c1: {
        name: "Body",
        type: 'color',
        'default': '#f8b26a',
        priority: 1.1
      },
      c2: {
        name: "Bean",
        type: 'color',
        'default': '#e15b64',
        priority: 1.2
      },
      show: {
        name: "Show Bean",
        type: 'boolean',
        'default': true,
        priority: 1.3
      }
    },
    watch: function(n, o){
      return import$(this.local, {
        d1: -0.67 * +n.speed,
        d2: -0.33 * +n.speed,
        d3: -0 * +n.speed,
        showBean: n.show ? 'block' : 'none',
        showBeanOffset: n.show ? -15 : 0
      });
    },
    download: function(arg$){
      var type, ref$, cfg, lc, s, html, css;
      type = arg$.type;
      if (type !== 'css') {
        return;
      }
      ref$ = [this.config, this.local], cfg = ref$[0], lc = ref$[1];
      s = (ref$ = cfg.size / 100) > 1 ? ref$ : 1;
      html = "<div>" + (cfg.show ? '<div></div><div></div><div></div>' : '') + "</div><div><div></div><div></div><div></div></div>";
      css = "@keyframes $id-1 {\n    0% { transform: rotate(0deg) }\n   50% { transform: rotate(-45deg) }\n  100% { transform: rotate(0deg) }\n}\n@keyframes $id-2 {\n    0% { transform: rotate(180deg) }\n   50% { transform: rotate(225deg) }\n  100% { transform: rotate(180deg) }\n}\n.$id > div:nth-child(2) {\n  transform: translate(" + lc.showBeanOffset + "px,0);\n}\n.$id > div:nth-child(2) div {\n  position: absolute;\n  top: " + s * 20 + "px;\n  left: " + s * 20 + "px;\n  width: " + s * 60 + "px;\n  height: " + s * 30 + "px;\n  border-radius: " + s * 60 + "px " + s * 60 + "px 0 0;\n  background: " + cfg.c1 + ";\n  animation: $id-1 " + 1 / cfg.speed + "s linear infinite;\n  transform-origin: " + s * 30 + "px " + s * 30 + "px\n}\n.$id > div:nth-child(2) div:nth-child(2) {\n  animation: $id-2 " + 1 / cfg.speed + "s linear infinite\n}\n.$id > div:nth-child(2) div:nth-child(3) {\n  transform: rotate(-90deg);\n  animation: none;\n}";
      if (cfg.show) {
        css += "@keyframes $id-3 {\n    0% { transform: translate(" + s * 95 + "px,0); opacity: 0 }\n   20% { opacity: 1 }\n  100% { transform: translate(" + s * 35 + "px,0); opacity: 1 }\n}\n.$id > div:nth-child(1) {\n  display: " + lc.showBean + ";\n}\n.$id > div:nth-child(1) div {\n  position: absolute;\n  top: " + s * 46 + "px;\n  left: -" + s * 4 + "px;\n  width: " + s * 8 + "px;\n  height: " + s * 8 + "px;\n  border-radius: 50%;\n  background: " + cfg.c2 + ";\n  animation: $id-3 " + 1 / cfg.speed + "s linear infinite\n}\n.$id > div:nth-child(1) div:nth-child(1) { animation-delay: " + lc.d1 + "s }\n.$id > div:nth-child(1) div:nth-child(2) { animation-delay: " + lc.d2 + "s }\n.$id > div:nth-child(1) div:nth-child(3) { animation-delay: " + lc.d3 + "s }";
      }
      return {
        css: css,
        html: html
      };
    },
    dom: function(cfg){
      var lc, svg;
      lc = this.local;
      svg = "";
      if (cfg.show) {
        svg += "<g>\n  <circle cx=\"60\" cy=\"50\" r=\"4\" fill=\"" + cfg.c2 + "\">\n    <animate attributeName=\"cx\" repeatCount=\"indefinite\" dur=\"" + 1 / cfg.speed + "s\"\n    values=\"95;35\" keyTimes=\"0;1\" begin=\"" + lc.d1 + "s\"/>\n    <animate attributeName=\"fill-opacity\" repeatCount=\"indefinite\" dur=\"" + 1 / cfg.speed + "s\"\n    values=\"0;1;1\" keyTimes=\"0;0.2;1\" begin=\"" + lc.d1 + "s\"/>\n  </circle>\n  <circle cx=\"60\" cy=\"50\" r=\"4\" fill=\"" + cfg.c2 + "\">\n    <animate attributeName=\"cx\" repeatCount=\"indefinite\" dur=\"" + 1 / cfg.speed + "s\"\n    values=\"95;35\" keyTimes=\"0;1\" begin=\"" + lc.d2 + "s\"/>\n    <animate attributeName=\"fill-opacity\" repeatCount=\"indefinite\" dur=\"" + 1 / cfg.speed + "s\"\n    values=\"0;1;1\" keyTimes=\"0;0.2;1\" begin=\"" + lc.d2 + "s\"/>\n  </circle>\n  <circle cx=\"60\" cy=\"50\" r=\"4\" fill=\"" + cfg.c2 + "\">\n    <animate attributeName=\"cx\" repeatCount=\"indefinite\" dur=\"" + 1 / cfg.speed + "s\"\n    values=\"95;35\" keyTimes=\"0;1\" begin=\"" + lc.d3 + "s\"/>\n    <animate attributeName=\"fill-opacity\" repeatCount=\"indefinite\" dur=\"" + 1 / cfg.speed + "s\"\n    values=\"0;1;1\" keyTimes=\"0;0.2;1\" begin=\"" + lc.d3 + "s\"/>\n  </circle>\n</g>";
      }
      return svg += "<g transform=\"translate(" + lc.showBeanOffset + " 0)\">\n  <path d=\"M50 50L20 50A30 30 0 0 0 80 50Z\" fill=\"" + cfg.c1 + "\" transform=\"rotate(90 50 50)\"/>\n  <path d=\"M50 50L20 50A30 30 0 0 0 80 50Z\" fill=\"" + cfg.c1 + "\">\n    <animateTransform attributeName=\"transform\" type=\"rotate\" repeatCount=\"indefinite\" dur=\"" + 1 / cfg.speed + "s\"\n    values=\"0 50 50;45 50 50;0 50 50\" keyTimes=\"0;0.5;1\"/>\n  </path>\n  <path d=\"M50 50L20 50A30 30 0 0 1 80 50Z\" fill=\"" + cfg.c1 + "\">\n    <animateTransform attributeName=\"transform\" type=\"rotate\" repeatCount=\"indefinite\" dur=\"" + 1 / cfg.speed + "s\"\n    values=\"0 50 50;-45 50 50;0 50 50\" keyTimes=\"0;0.5;1\"/>\n  </path>\n</g>";
    }
  };
  if (typeof module != 'undefined' && module !== null) {
    module.exports = ret;
  }
  if (typeof ModManager != 'undefined' && ModManager !== null) {
    ModManager.register(ret);
  }
  return ret;
})();
function import$(obj, src){
  var own = {}.hasOwnProperty;
  for (var key in src) if (own.call(src, key)) obj[key] = src[key];
  return obj;
}
},{}]},{},[1]);
